{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HypIgu Documentation for the HypIgu package for SageMath. Purpose The goal of HypIgu is to provide SageMath with the functionality to compute various zeta functions associated with hyperplane arrangements. Included are common constructions for hyperplane arrangements and specializations of the flag Hilbert\u2013Poincar\u00e9 series defined in Maglione\u2013Voll. Mathematical details are given in Maglione\u2013Voll. We outline the functions included in HypIgu and provide example cases. Setup The simplest way to install HypIgu is to run the following $ sage -pip install hypigu HypIgu has no external dependencies and is compatible with SageMath 9.2 . Importing Import HypIgu during your SageMath run with the following import hypigu as hi Throughout we use hi for the reference name of hypigu . Funding This package is funded in part by DFG grant 373111162 .","title":"Home"},{"location":"#hypigu","text":"Documentation for the HypIgu package for SageMath.","title":"HypIgu"},{"location":"#purpose","text":"The goal of HypIgu is to provide SageMath with the functionality to compute various zeta functions associated with hyperplane arrangements. Included are common constructions for hyperplane arrangements and specializations of the flag Hilbert\u2013Poincar\u00e9 series defined in Maglione\u2013Voll. Mathematical details are given in Maglione\u2013Voll. We outline the functions included in HypIgu and provide example cases.","title":"Purpose"},{"location":"#setup","text":"The simplest way to install HypIgu is to run the following $ sage -pip install hypigu HypIgu has no external dependencies and is compatible with SageMath 9.2 .","title":"Setup"},{"location":"#importing","text":"Import HypIgu during your SageMath run with the following import hypigu as hi Throughout we use hi for the reference name of hypigu .","title":"Importing"},{"location":"#funding","text":"This package is funded in part by DFG grant 373111162 .","title":"Funding"},{"location":"constructors/","text":"Constructors We provide a number of constructions of hyperplane arrangements. This uses the default hyperplane arrangement class in SageMath. There is some overlap with the default library , and one is encouraged to search there in case your favorite hyperplane arrangement is not in our list. Most of our constructions are Coxeter-theoretic\u2014meaning, they take as input $\\mathsf{X}_n$, where $\\mathsf{X}$ is the Coxeter type and $n$ is the (Coxeter) rank. For example the Catalan arrangement of type $\\mathsf{X}_n$ can be defined for all Coxeter arrangements like its defined for the (type $\\mathsf{A}$) braid arrangement. CatalanArrangement Input : a string or an iterable container of strings. Output : the Catalan arrangement associated with the strings. If just one string is provide, it should be formatted like 'Xn' , where X is a roman letter from $\\mathsf{A}$ to $\\mathsf{H}$ and n is a positive integer. Strings can be separated by one white space like 'Xm Yn' , and iterable containers of strings need to have strings formatted in this way. The input format matches CoxeterArrangement . If $\\mathcal{A}$ is a Coxeter arrangement of type $\\mathsf{X}_n$, then the Catalan arrangement of type $\\mathsf{X}_n$ is [ \\mathcal{C} = \\{L - 1 ~|~ L\\in\\mathcal{A} \\} \\cup \\mathcal{A} \\cup \\{L + 1 ~|~ L\\in\\mathcal{A} \\}. ] Example ( The Catalan arrangement) The Catalan arrangement is defined as [ \\{X_i - X_j + \\varepsilon ~|~ 1\\leq i < j \\leq n+1,\\; \\varepsilon\\in\\{-1, 0, 1\\} \\}. ] We can quickly construct this as a type $\\mathsf{A}_n$ Catalan arrangement for $n=2$. sage: A = hi.CatalanArrangement(\"A2\") sage: A Arrangement of 9 hyperplanes of dimension 3 and rank 2 sage: A.hyperplanes() (Hyperplane 0*x0 + x1 - x2 - 1, Hyperplane 0*x0 + x1 - x2 + 0, Hyperplane 0*x0 + x1 - x2 + 1, Hyperplane x0 - x1 + 0*x2 - 1, Hyperplane x0 - x1 + 0*x2 + 0, Hyperplane x0 - x1 + 0*x2 + 1, Hyperplane x0 + 0*x1 - x2 - 1, Hyperplane x0 + 0*x1 - x2 + 0, Hyperplane x0 + 0*x1 - x2 + 1) Example (${\\footnotesize \\mathsf{B}_4}$-Catalan arrangement) The Coxeter arrangement of type $\\mathsf{B}_4$ has $16$ hyperplanes in $\\mathbb{Q}^4$. Thus, the associated Catalan arrangement is non-central with $48$ hyperplanes in $\\mathbb{Q}^4$. We verify this. sage: A = hi.CatalanArrangement(\"B4\") sage: A Arrangement of 48 hyperplanes of dimension 4 and rank 4 sage: A.is_central() False CoxeterArrangement Input : a string or an iterable container of strings. Output : the Coxeter arrangement associated with the strings. If just one string is provide, it should be formatted like 'Xn' , where X is a roman letter from $\\mathsf{A}$ to $\\mathsf{H}$ and n is a positive integer. Strings can be separated by one white space like 'Xm Yn' , and iterable containers of strings need to have strings formatted in this way. Example (Braid arrangement) The braid arrangement with $n+1$ hyperplanes is the type $\\mathsf{A}_n$ Coxeter arrangement: [ \\{X_i - X_j ~|~ 1\\leq i < j \\leq n+1\\}. ] We construct the braid arrangement with $3$ hyperplanes. sage: hi.CoxeterArrangement(\"A2\") Arrangement <x1 - x2 | x0 - x1 | x0 - x2> Example (Boolean arrangement) One should consider the other two constructions of the Boolean arrangement via direct sums and polynomials . The Boolean arrangement with $n$ hyperplanes is a Coxeter arrangement, isomorphic to $\\mathsf{A}_1^n$, the direct sum of $n$ copies of $\\mathsf{A}_1$. We construct the rank $5$ Boolean arrangement in two different ways. Note that, when created this way, the ambient dimension is double the rank. sage: bool5 = \"A1 A1 A1 A1 A1\" sage: hi.CoxeterArrangement(bool5) Arrangement of 5 hyperplanes of dimension 10 and rank 5 Another construction is as follows. sage: L = [\"A1\" for i in range(5)] sage: L ['A1', 'A1', 'A1', 'A1', 'A1'] sage: hi.CoxeterArrangement(L) Arrangement of 5 hyperplanes of dimension 10 and rank 5 Example (Coxeter type ${\\footnotesize \\mathsf{I}_2(m)}$) In all other Coxeter types, the integer corresponds to the rank. The exception is with type $\\mathsf{I}$. If the input is type $\\mathsf{I}$, then the integer corresponds to the number of hyperplanes. Here, we give a $\\mathbb{Q}$-representation of $\\mathsf{I}_2(8)$ as follows. sage: A = hi.CoxeterArrangement(\"I8\") sage: A Arrangement of 8 hyperplanes of dimension 2 and rank 2 sage: A.hyperplanes() (Hyperplane -x0 + 2*x1 + 0, Hyperplane -x0 + 3*x1 + 0, Hyperplane 0*x0 + x1 + 0, Hyperplane x0 - x1 + 0, Hyperplane x0 + 0*x1 + 0, Hyperplane x0 + x1 + 0, Hyperplane x0 + 2*x1 + 0, Hyperplane x0 + 3*x1 + 0) DirectSum Input : an iterable container of hyperplane arrangements. Output : the direct sum arrangement. The direct sum arrangement is also known as the product arrangement. Example (Boolean arrangement again) One should compare this example with the other Boolean examples: as a Coxeter arrangement and as an arrangement from a polynomial . First we create the irreducible factor: the origin on the rational line. sage: H = HyperplaneArrangements(QQ, 'x') sage: A = H([0, 1]) sage: A Arrangement <x> Now we create higher rank Boolean arrangements in two slightly different ways. The rank $4$ Boolean arrangement is given as follows. sage: hi.DirectSum(A, A, A, A) Arrangement <x3 | x2 | x1 | x0> And the rank $256$ Boolean arrangement is sage: L = [A for i in range(256)] sage: hi.DirectSum(L) Arrangement of 256 hyperplanes of dimension 256 and rank 256 LinialArrangement Input : a string or an iterable container of strings. Output : the Linial arrangement associated with the strings. If just one string is provide, it should be formatted like 'Xn' , where X is a roman letter from $\\mathsf{A}$ to $\\mathsf{H}$ and n is a positive integer. Strings can be separated by one white space like 'Xm Yn' , and iterable containers of strings need to have strings formatted in this way. The input format matches CoxeterArrangement . If $\\mathcal{A}$ is a Coxeter arrangement of type $\\mathsf{X}_n$, then the Linial arrangement of type $\\mathsf{X}_n$ is [ \\mathcal{L} = \\{L - 1 ~|~ L\\in\\mathcal{A} \\} . ] Example ( The Linial arrangement) Usually the Linial arrangement is defined without reference to a Coxeter type and is given as the type-$\\mathsf{A}$ version above. We construct the Linial arrangement of type $\\mathsf{A}_2$. sage: A = hi.LinialArrangement(\"A2\") sage: A Arrangement <x1 - x2 + 1 | x0 - x1 + 1 | x0 - x2 + 1> PolynomialToArrangement Input : a polynomial or symbolic expression. Output : the hyperplane arrangement associated with the linear factors of the given polynomial. We require that the given polynomial only have linear factors. Strings are also acceptable input and will be interpreted by SageMath (so they should be formatted accordingly). The underlying field for symbolic expressions is assumed to be $\\mathbb{Q}$. Example (Boolean arrangement yet again) Compare this construction with the Boolean construction as a Coxeter arrangement and as a direct sum . The Boolean arrangement is equivalent to the arrangement of coordinate hyperplanes, so the corresponding polynomial is a monomial. We construct the rank $5$ Boolean arrangement. sage: a, b, c, d, e = var('a b c d e') sage: f = a*b*c*d*e sage: A = hi.PolynomialToArrangement(f) sage: A Arrangement of 5 hyperplanes of dimension 5 and rank 5 Equivalently, one can input just the string. sage: B = hi.PolynomialToArrangement('a*b*c*d*e') sage: A == B True Example (Cyclotomic) Let $\\zeta_5$ be a primitive $5$th root of unity. We construct the arrangement of $5$ lines through the origin with underlying field $\\mathbb{Q}(\\zeta_5)$. This can be accomplished by constructing the hyperplane arrangement associated to the polynomial $X^5 - Y^5\\in \\mathbb{Q}(\\zeta_5)[X, Y]$. Note that this arrangement is equivalent to the Coxeter arrangement of type $\\mathsf{I}_2(5)\\cong \\mathsf{H}_2$; see the $\\mathsf{I}_2(m)$ Example . sage: K = CyclotomicField(5) sage: R.<X, Y> = PolynomialRing(K) sage: f = X**5 - Y**5 sage: A = hi.PolynomialToArrangement(f) sage: A Arrangement of 5 hyperplanes of dimension 2 and rank 2 sage: A.hyperplanes() (Hyperplane X + (-zeta5^2)*Y + 0, Hyperplane X + (zeta5^3 + zeta5^2 + zeta5 + 1)*Y + 0, Hyperplane X + (-zeta5^3)*Y + 0, Hyperplane X + (-zeta5)*Y + 0, Hyperplane X + (-1)*Y + 0) Note that if the underlying field were just, say, $\\mathbb{Q}$, then this would result in an error since $f$ is not a product of linear factors. ShiArrangement Input : a string or an iterable container of strings. Output : the Shi arrangement associated with the strings. If just one string is provide, it should be formatted like 'Xn' , where X is a roman letter from $\\mathsf{A}$ to $\\mathsf{H}$ and n is a positive integer. Strings can be separated by one white space like 'Xm Yn' , and iterable containers of strings need to have strings formatted in this way. The input format matches CoxeterArrangement . If $\\mathcal{A}$ is a Coxeter arrangement of type $\\mathsf{X}_n$, then the Shi arrangement of type $\\mathsf{X}_n$ is [ \\mathcal{S} = \\mathcal{A} \\cup \\{L - 1 ~|~ L\\in\\mathcal{A} \\} . ] Example ( The Shi arrangement) Like with some of our other constructors, the usual definition makes no reference to Coxeter types, so the Shi arrangement is equal to the type-$\\mathsf{A}$ Shi arrangement defined above. We can easily construct this for $\\mathsf{A}_2$. sage: A = hi.ShiArrangement(\"A2\") sage: A Arrangement of 6 hyperplanes of dimension 3 and rank 2","title":"Constructors"},{"location":"constructors/#constructors","text":"We provide a number of constructions of hyperplane arrangements. This uses the default hyperplane arrangement class in SageMath. There is some overlap with the default library , and one is encouraged to search there in case your favorite hyperplane arrangement is not in our list. Most of our constructions are Coxeter-theoretic\u2014meaning, they take as input $\\mathsf{X}_n$, where $\\mathsf{X}$ is the Coxeter type and $n$ is the (Coxeter) rank. For example the Catalan arrangement of type $\\mathsf{X}_n$ can be defined for all Coxeter arrangements like its defined for the (type $\\mathsf{A}$) braid arrangement.","title":"Constructors"},{"location":"constructors/#catalanarrangement","text":"Input : a string or an iterable container of strings. Output : the Catalan arrangement associated with the strings. If just one string is provide, it should be formatted like 'Xn' , where X is a roman letter from $\\mathsf{A}$ to $\\mathsf{H}$ and n is a positive integer. Strings can be separated by one white space like 'Xm Yn' , and iterable containers of strings need to have strings formatted in this way. The input format matches CoxeterArrangement . If $\\mathcal{A}$ is a Coxeter arrangement of type $\\mathsf{X}_n$, then the Catalan arrangement of type $\\mathsf{X}_n$ is [ \\mathcal{C} = \\{L - 1 ~|~ L\\in\\mathcal{A} \\} \\cup \\mathcal{A} \\cup \\{L + 1 ~|~ L\\in\\mathcal{A} \\}. ]","title":"CatalanArrangement"},{"location":"constructors/#example-the-catalan-arrangement","text":"The Catalan arrangement is defined as [ \\{X_i - X_j + \\varepsilon ~|~ 1\\leq i < j \\leq n+1,\\; \\varepsilon\\in\\{-1, 0, 1\\} \\}. ] We can quickly construct this as a type $\\mathsf{A}_n$ Catalan arrangement for $n=2$. sage: A = hi.CatalanArrangement(\"A2\") sage: A Arrangement of 9 hyperplanes of dimension 3 and rank 2 sage: A.hyperplanes() (Hyperplane 0*x0 + x1 - x2 - 1, Hyperplane 0*x0 + x1 - x2 + 0, Hyperplane 0*x0 + x1 - x2 + 1, Hyperplane x0 - x1 + 0*x2 - 1, Hyperplane x0 - x1 + 0*x2 + 0, Hyperplane x0 - x1 + 0*x2 + 1, Hyperplane x0 + 0*x1 - x2 - 1, Hyperplane x0 + 0*x1 - x2 + 0, Hyperplane x0 + 0*x1 - x2 + 1)","title":"Example (The Catalan arrangement)"},{"location":"constructors/#example-footnotesize-mathsfb_4-catalan-arrangement","text":"The Coxeter arrangement of type $\\mathsf{B}_4$ has $16$ hyperplanes in $\\mathbb{Q}^4$. Thus, the associated Catalan arrangement is non-central with $48$ hyperplanes in $\\mathbb{Q}^4$. We verify this. sage: A = hi.CatalanArrangement(\"B4\") sage: A Arrangement of 48 hyperplanes of dimension 4 and rank 4 sage: A.is_central() False","title":"Example (${\\footnotesize \\mathsf{B}_4}$-Catalan arrangement)"},{"location":"constructors/#coxeterarrangement","text":"Input : a string or an iterable container of strings. Output : the Coxeter arrangement associated with the strings. If just one string is provide, it should be formatted like 'Xn' , where X is a roman letter from $\\mathsf{A}$ to $\\mathsf{H}$ and n is a positive integer. Strings can be separated by one white space like 'Xm Yn' , and iterable containers of strings need to have strings formatted in this way.","title":"CoxeterArrangement"},{"location":"constructors/#example-braid-arrangement","text":"The braid arrangement with $n+1$ hyperplanes is the type $\\mathsf{A}_n$ Coxeter arrangement: [ \\{X_i - X_j ~|~ 1\\leq i < j \\leq n+1\\}. ] We construct the braid arrangement with $3$ hyperplanes. sage: hi.CoxeterArrangement(\"A2\") Arrangement <x1 - x2 | x0 - x1 | x0 - x2>","title":"Example (Braid arrangement)"},{"location":"constructors/#example-boolean-arrangement","text":"One should consider the other two constructions of the Boolean arrangement via direct sums and polynomials . The Boolean arrangement with $n$ hyperplanes is a Coxeter arrangement, isomorphic to $\\mathsf{A}_1^n$, the direct sum of $n$ copies of $\\mathsf{A}_1$. We construct the rank $5$ Boolean arrangement in two different ways. Note that, when created this way, the ambient dimension is double the rank. sage: bool5 = \"A1 A1 A1 A1 A1\" sage: hi.CoxeterArrangement(bool5) Arrangement of 5 hyperplanes of dimension 10 and rank 5 Another construction is as follows. sage: L = [\"A1\" for i in range(5)] sage: L ['A1', 'A1', 'A1', 'A1', 'A1'] sage: hi.CoxeterArrangement(L) Arrangement of 5 hyperplanes of dimension 10 and rank 5","title":"Example (Boolean arrangement)"},{"location":"constructors/#example-coxeter-type-footnotesize-mathsfi_2m","text":"In all other Coxeter types, the integer corresponds to the rank. The exception is with type $\\mathsf{I}$. If the input is type $\\mathsf{I}$, then the integer corresponds to the number of hyperplanes. Here, we give a $\\mathbb{Q}$-representation of $\\mathsf{I}_2(8)$ as follows. sage: A = hi.CoxeterArrangement(\"I8\") sage: A Arrangement of 8 hyperplanes of dimension 2 and rank 2 sage: A.hyperplanes() (Hyperplane -x0 + 2*x1 + 0, Hyperplane -x0 + 3*x1 + 0, Hyperplane 0*x0 + x1 + 0, Hyperplane x0 - x1 + 0, Hyperplane x0 + 0*x1 + 0, Hyperplane x0 + x1 + 0, Hyperplane x0 + 2*x1 + 0, Hyperplane x0 + 3*x1 + 0)","title":"Example (Coxeter type ${\\footnotesize \\mathsf{I}_2(m)}$)"},{"location":"constructors/#directsum","text":"Input : an iterable container of hyperplane arrangements. Output : the direct sum arrangement. The direct sum arrangement is also known as the product arrangement.","title":"DirectSum"},{"location":"constructors/#example-boolean-arrangement-again","text":"One should compare this example with the other Boolean examples: as a Coxeter arrangement and as an arrangement from a polynomial . First we create the irreducible factor: the origin on the rational line. sage: H = HyperplaneArrangements(QQ, 'x') sage: A = H([0, 1]) sage: A Arrangement <x> Now we create higher rank Boolean arrangements in two slightly different ways. The rank $4$ Boolean arrangement is given as follows. sage: hi.DirectSum(A, A, A, A) Arrangement <x3 | x2 | x1 | x0> And the rank $256$ Boolean arrangement is sage: L = [A for i in range(256)] sage: hi.DirectSum(L) Arrangement of 256 hyperplanes of dimension 256 and rank 256","title":"Example (Boolean arrangement again)"},{"location":"constructors/#linialarrangement","text":"Input : a string or an iterable container of strings. Output : the Linial arrangement associated with the strings. If just one string is provide, it should be formatted like 'Xn' , where X is a roman letter from $\\mathsf{A}$ to $\\mathsf{H}$ and n is a positive integer. Strings can be separated by one white space like 'Xm Yn' , and iterable containers of strings need to have strings formatted in this way. The input format matches CoxeterArrangement . If $\\mathcal{A}$ is a Coxeter arrangement of type $\\mathsf{X}_n$, then the Linial arrangement of type $\\mathsf{X}_n$ is [ \\mathcal{L} = \\{L - 1 ~|~ L\\in\\mathcal{A} \\} . ]","title":"LinialArrangement"},{"location":"constructors/#example-the-linial-arrangement","text":"Usually the Linial arrangement is defined without reference to a Coxeter type and is given as the type-$\\mathsf{A}$ version above. We construct the Linial arrangement of type $\\mathsf{A}_2$. sage: A = hi.LinialArrangement(\"A2\") sage: A Arrangement <x1 - x2 + 1 | x0 - x1 + 1 | x0 - x2 + 1>","title":"Example (The Linial arrangement)"},{"location":"constructors/#polynomialtoarrangement","text":"Input : a polynomial or symbolic expression. Output : the hyperplane arrangement associated with the linear factors of the given polynomial. We require that the given polynomial only have linear factors. Strings are also acceptable input and will be interpreted by SageMath (so they should be formatted accordingly). The underlying field for symbolic expressions is assumed to be $\\mathbb{Q}$.","title":"PolynomialToArrangement"},{"location":"constructors/#example-boolean-arrangement-yet-again","text":"Compare this construction with the Boolean construction as a Coxeter arrangement and as a direct sum . The Boolean arrangement is equivalent to the arrangement of coordinate hyperplanes, so the corresponding polynomial is a monomial. We construct the rank $5$ Boolean arrangement. sage: a, b, c, d, e = var('a b c d e') sage: f = a*b*c*d*e sage: A = hi.PolynomialToArrangement(f) sage: A Arrangement of 5 hyperplanes of dimension 5 and rank 5 Equivalently, one can input just the string. sage: B = hi.PolynomialToArrangement('a*b*c*d*e') sage: A == B True","title":"Example (Boolean arrangement yet again)"},{"location":"constructors/#example-cyclotomic","text":"Let $\\zeta_5$ be a primitive $5$th root of unity. We construct the arrangement of $5$ lines through the origin with underlying field $\\mathbb{Q}(\\zeta_5)$. This can be accomplished by constructing the hyperplane arrangement associated to the polynomial $X^5 - Y^5\\in \\mathbb{Q}(\\zeta_5)[X, Y]$. Note that this arrangement is equivalent to the Coxeter arrangement of type $\\mathsf{I}_2(5)\\cong \\mathsf{H}_2$; see the $\\mathsf{I}_2(m)$ Example . sage: K = CyclotomicField(5) sage: R.<X, Y> = PolynomialRing(K) sage: f = X**5 - Y**5 sage: A = hi.PolynomialToArrangement(f) sage: A Arrangement of 5 hyperplanes of dimension 2 and rank 2 sage: A.hyperplanes() (Hyperplane X + (-zeta5^2)*Y + 0, Hyperplane X + (zeta5^3 + zeta5^2 + zeta5 + 1)*Y + 0, Hyperplane X + (-zeta5^3)*Y + 0, Hyperplane X + (-zeta5)*Y + 0, Hyperplane X + (-1)*Y + 0) Note that if the underlying field were just, say, $\\mathbb{Q}$, then this would result in an error since $f$ is not a product of linear factors.","title":"Example (Cyclotomic)"},{"location":"constructors/#shiarrangement","text":"Input : a string or an iterable container of strings. Output : the Shi arrangement associated with the strings. If just one string is provide, it should be formatted like 'Xn' , where X is a roman letter from $\\mathsf{A}$ to $\\mathsf{H}$ and n is a positive integer. Strings can be separated by one white space like 'Xm Yn' , and iterable containers of strings need to have strings formatted in this way. The input format matches CoxeterArrangement . If $\\mathcal{A}$ is a Coxeter arrangement of type $\\mathsf{X}_n$, then the Shi arrangement of type $\\mathsf{X}_n$ is [ \\mathcal{S} = \\mathcal{A} \\cup \\{L - 1 ~|~ L\\in\\mathcal{A} \\} . ]","title":"ShiArrangement"},{"location":"constructors/#example-the-shi-arrangement","text":"Like with some of our other constructors, the usual definition makes no reference to Coxeter types, so the Shi arrangement is equal to the type-$\\mathsf{A}$ Shi arrangement defined above. We can easily construct this for $\\mathsf{A}_2$. sage: A = hi.ShiArrangement(\"A2\") sage: A Arrangement of 6 hyperplanes of dimension 3 and rank 2","title":"Example (The Shi arrangement)"},{"location":"generating-functions/","text":"Generating Functions The main purpose of this package is to explicitly compute the flag Hilbert\u2013Poincar\u00e9 series and its specializations like Igusa'a local zeta function. We keep variable letters consistent with Maglione\u2013Voll; the exceptions is we replace $q^{-s_x}$ with $t_x$, for some label $x$. AnalyticZetaFunction Input : a hyperplane arrangement $\\mathcal{A}$. Output : the analytic zeta function associated to $\\mathcal{A}$. Given a suitable $\\mathfrak{o}$-representation of a $d$-dimensional hyperplane arrangement $\\mathcal{A}$, where $\\mathfrak{o}$ is a compact discrete valuation ring, the analytic zeta function is defined to be the integral: [ \\zeta_{\\mathcal{A}(\\mathfrak{o})}(\\textbf{s}) = \\int_{\\mathfrak{o}^d} \\prod_{x\\in\\widetilde{\\mathcal{L}}(\\mathcal{A})} \\| \\mathcal{A}_x\\|^{s_x} \\, d\\mu. ] Example (Lines through the origin) We compute one of the analytic zeta functions in Section 4.2 of Maglione\u2013Voll. Let $m\\geq 2$ and $\\zeta_m$ a primitive $m$th root of unity. We define an arrangement of $m$ lines through the origin, given as the linear factors of $X^m-Y^m$ in $\\mathbb{Q}(\\zeta_m)$. We set $m=5$ for this example. sage: K = CyclotomicField(5) sage: R.<X, Y> = PolynomialRing(K) sage: f = X**5 - Y**5 sage: A = hi.PolynomialToArrangement(f) sage: A Arrangement of 5 hyperplanes of dimension 2 and rank 2 The analytic zeta function is then sage: Z = hi.AnalyticZetaFunction(A) sage: Z -((4/q - 1)*(1/q - 1) - t1*(1/q - 1)^2/(q*(t1/q - 1)) - t2*(1/q - 1)^2/(q*(t2/q - 1)) - t3*(1/q - 1)^2/(q*(t3/q - 1)) - t4*(1/q - 1)^2/(q*(t4/q - 1)) - t5*(1/q - 1)^2/(q*(t5/q - 1)))/(t1*t2*t3*t4*t5*t6/q^2 - 1) which is indeed [ \\dfrac{1 - q^{-1}}{1 - q^{-2-s_{\\hat{1}} - s_1-\\cdots -s_5}} \\left(1 - 4q^{-1} + (1 - q^{-1}) \\sum_{i=1}^5 \\dfrac{q^{-1-s_i}}{1 - q^{-1-s_i}}\\right) . ] AtomZetaFunction Input : a hyperplane arrangement $\\mathcal{A}$. Output : the atom zeta function associated to $\\mathcal{A}$. Given a suitable $\\mathfrak{o}$-representation of a $d$-dimensional hyperplane arrangement $\\mathcal{A}$, where $\\mathfrak{o}$ is a compact discrete valuation ring, the atom zeta function is defined to be the integral: [ \\zeta_{\\mathcal{A}(\\mathfrak{o})}^{\\mathrm{at}}(\\textbf{s}) = \\int_{\\mathfrak{o}^d} \\prod_{L\\in\\mathcal{A}(\\mathfrak{o})} |L|^{s_L} \\, d\\mu. ] CombinatorialSkeleton Input : a hyperplane arrangement $\\mathcal{A}$. Output : the combinatorial skeleton associated to $\\mathcal{A}$. The combinatorial skeleton of $\\mathcal{A}$ is defined to be: [ HP_{\\mathcal{A}}^{\\mathrm{sk}} (Y, T) = \\sum_{F\\in\\Delta(\\widetilde{\\mathcal{L}}(\\mathcal{A}))} \\pi_F(Y) \\left(\\dfrac{T}{1 - T}\\right)^{|F|}. ] FlagHilbertPoincareSeries Input : a hyperplane arrangement $\\mathcal{A}$. Output : the flag Hilbert\u2013Poincar\u00e9 series associated to $\\mathcal{A}$. The flag Hilbert\u2013Poincar\u00e9 series of $\\mathcal{A}$ is defined to be: [ HP_{\\mathcal{A}} (Y, \\mathbf{T}) = \\sum_{F\\in\\Delta(\\widetilde{\\mathcal{L}}(\\mathcal{A}))} \\pi_F(Y) \\prod_{x\\in F} \\frac{T_x}{1 - T_x}. ] IgusaZetaFunction Input : a hyperplane arrangement $\\mathcal{A}$ or a polynomial $f$. Output : Igusa's local zeta function associated to either $\\mathcal{A}$ or $f$. If a polynomial, $f$, is given, we require that $f$ be the product of linear factors. Symbolic expressions and strings are fine as well, provided SageMath interprets them as a polynomial. For a compact discrete valuation ring $\\mathfrak{o}$ and a polynomial $f\\in \\mathfrak{o}[X_1,\\dots, X_d]$, Igusa's local zeta function associated with $f$ is [ Z_f(s) = \\int_{\\mathfrak{o}^d} |f(\\mathbf{X})|^s\\, d\\mu. ] If $Q_\\mathcal{A}$ is the defining polynomial of a hyperplane arrangement, then Igusa's local zeta function associated $\\mathcal{A}$ is $Z_{Q_\\mathcal{A}}(s)$.","title":"Generating Functions"},{"location":"generating-functions/#generating-functions","text":"The main purpose of this package is to explicitly compute the flag Hilbert\u2013Poincar\u00e9 series and its specializations like Igusa'a local zeta function. We keep variable letters consistent with Maglione\u2013Voll; the exceptions is we replace $q^{-s_x}$ with $t_x$, for some label $x$.","title":"Generating Functions"},{"location":"generating-functions/#analyticzetafunction","text":"Input : a hyperplane arrangement $\\mathcal{A}$. Output : the analytic zeta function associated to $\\mathcal{A}$. Given a suitable $\\mathfrak{o}$-representation of a $d$-dimensional hyperplane arrangement $\\mathcal{A}$, where $\\mathfrak{o}$ is a compact discrete valuation ring, the analytic zeta function is defined to be the integral: [ \\zeta_{\\mathcal{A}(\\mathfrak{o})}(\\textbf{s}) = \\int_{\\mathfrak{o}^d} \\prod_{x\\in\\widetilde{\\mathcal{L}}(\\mathcal{A})} \\| \\mathcal{A}_x\\|^{s_x} \\, d\\mu. ]","title":"AnalyticZetaFunction"},{"location":"generating-functions/#example-lines-through-the-origin","text":"We compute one of the analytic zeta functions in Section 4.2 of Maglione\u2013Voll. Let $m\\geq 2$ and $\\zeta_m$ a primitive $m$th root of unity. We define an arrangement of $m$ lines through the origin, given as the linear factors of $X^m-Y^m$ in $\\mathbb{Q}(\\zeta_m)$. We set $m=5$ for this example. sage: K = CyclotomicField(5) sage: R.<X, Y> = PolynomialRing(K) sage: f = X**5 - Y**5 sage: A = hi.PolynomialToArrangement(f) sage: A Arrangement of 5 hyperplanes of dimension 2 and rank 2 The analytic zeta function is then sage: Z = hi.AnalyticZetaFunction(A) sage: Z -((4/q - 1)*(1/q - 1) - t1*(1/q - 1)^2/(q*(t1/q - 1)) - t2*(1/q - 1)^2/(q*(t2/q - 1)) - t3*(1/q - 1)^2/(q*(t3/q - 1)) - t4*(1/q - 1)^2/(q*(t4/q - 1)) - t5*(1/q - 1)^2/(q*(t5/q - 1)))/(t1*t2*t3*t4*t5*t6/q^2 - 1) which is indeed [ \\dfrac{1 - q^{-1}}{1 - q^{-2-s_{\\hat{1}} - s_1-\\cdots -s_5}} \\left(1 - 4q^{-1} + (1 - q^{-1}) \\sum_{i=1}^5 \\dfrac{q^{-1-s_i}}{1 - q^{-1-s_i}}\\right) . ]","title":"Example (Lines through the origin)"},{"location":"generating-functions/#atomzetafunction","text":"Input : a hyperplane arrangement $\\mathcal{A}$. Output : the atom zeta function associated to $\\mathcal{A}$. Given a suitable $\\mathfrak{o}$-representation of a $d$-dimensional hyperplane arrangement $\\mathcal{A}$, where $\\mathfrak{o}$ is a compact discrete valuation ring, the atom zeta function is defined to be the integral: [ \\zeta_{\\mathcal{A}(\\mathfrak{o})}^{\\mathrm{at}}(\\textbf{s}) = \\int_{\\mathfrak{o}^d} \\prod_{L\\in\\mathcal{A}(\\mathfrak{o})} |L|^{s_L} \\, d\\mu. ]","title":"AtomZetaFunction"},{"location":"generating-functions/#combinatorialskeleton","text":"Input : a hyperplane arrangement $\\mathcal{A}$. Output : the combinatorial skeleton associated to $\\mathcal{A}$. The combinatorial skeleton of $\\mathcal{A}$ is defined to be: [ HP_{\\mathcal{A}}^{\\mathrm{sk}} (Y, T) = \\sum_{F\\in\\Delta(\\widetilde{\\mathcal{L}}(\\mathcal{A}))} \\pi_F(Y) \\left(\\dfrac{T}{1 - T}\\right)^{|F|}. ]","title":"CombinatorialSkeleton"},{"location":"generating-functions/#flaghilbertpoincareseries","text":"Input : a hyperplane arrangement $\\mathcal{A}$. Output : the flag Hilbert\u2013Poincar\u00e9 series associated to $\\mathcal{A}$. The flag Hilbert\u2013Poincar\u00e9 series of $\\mathcal{A}$ is defined to be: [ HP_{\\mathcal{A}} (Y, \\mathbf{T}) = \\sum_{F\\in\\Delta(\\widetilde{\\mathcal{L}}(\\mathcal{A}))} \\pi_F(Y) \\prod_{x\\in F} \\frac{T_x}{1 - T_x}. ]","title":"FlagHilbertPoincareSeries"},{"location":"generating-functions/#igusazetafunction","text":"Input : a hyperplane arrangement $\\mathcal{A}$ or a polynomial $f$. Output : Igusa's local zeta function associated to either $\\mathcal{A}$ or $f$. If a polynomial, $f$, is given, we require that $f$ be the product of linear factors. Symbolic expressions and strings are fine as well, provided SageMath interprets them as a polynomial. For a compact discrete valuation ring $\\mathfrak{o}$ and a polynomial $f\\in \\mathfrak{o}[X_1,\\dots, X_d]$, Igusa's local zeta function associated with $f$ is [ Z_f(s) = \\int_{\\mathfrak{o}^d} |f(\\mathbf{X})|^s\\, d\\mu. ] If $Q_\\mathcal{A}$ is the defining polynomial of a hyperplane arrangement, then Igusa's local zeta function associated $\\mathcal{A}$ is $Z_{Q_\\mathcal{A}}(s)$.","title":"IgusaZetaFunction"},{"location":"lattices/","text":"Lattices We include a class called LatticeOfFlats , which is associated with a hyperplane arrangement. This class keeps track of basic information we need to compute the various generating functions associated with a hyperplane arrangement. (For non-central arrangements, this is indeed not a lattice, but close to one.) All other functions are tied to the LatticeOfFlats class and, thus, are either attributes or methods. LatticeOfFlats Input : a hyperplane arrangement; poset=None : a finite poset; flat_labels=None : a dictionary from the elements of the poset to subsets of atoms; hyperplane_labels=None : a dictionary from the atoms of the poset to the hyperplanes. Output : the lattice of flats for the given hyperplane arrangement. Unless the poset and labels have been computed before, they should not be given as this function computes the intersection poset of a hyperplane arrangement faster than the default in SageMath. Attributes The lattice of flats has four attributes: hyperplane_arrangement : the given hyperplane arrangement; poset : the intersection poset; flat_labels : the dictionary indexed by the elements of poset with values given by subsets of the atoms of poset ; hyperplane_labels : the dictionary indexed by the atoms of poset with values equal to the hyperplanes of hyperplane_arrangement . Example (Lattice of braid arrangement) We construct the lattice of flats for the braid arrangement in $\\mathbb{R}^4$. sage: A = hi.CoxeterArrangement(\"A3\") sage: A Arrangement of 6 hyperplanes of dimension 4 and rank 3 sage: L = hi.LatticeOfFlats(A) sage: L The lattice of flats of: Arrangement of 6 hyperplanes of dimension 4 and rank 3 given by: Finite poset containing 15 elements Now we look at the data stored in the attributes. We display the hyperplanes in the arrangement. sage: L.hyperplane_arrangement Arrangement of 6 hyperplanes of dimension 4 and rank 3 sage: L.hyperplane_arrangement.hyperplanes() (Hyperplane 0*x0 + 0*x1 + x2 - x3 + 0, Hyperplane 0*x0 + x1 - x2 + 0*x3 + 0, Hyperplane 0*x0 + x1 + 0*x2 - x3 + 0, Hyperplane x0 - x1 + 0*x2 + 0*x3 + 0, Hyperplane x0 + 0*x1 - x2 + 0*x3 + 0, Hyperplane x0 + 0*x1 + 0*x2 - x3 + 0) We display the poset as an image. sage: L.poset Finite poset containing 15 elements Instead of showing the entire dictionaries, we will evaluate them at a few points. sage: L.flat_labels[3] {3} sage: L.flat_labels[13] {3, 5} sage: L.flat_labels[9] {1, 5, 6} sage: L.flat_labels[0] {} We see that hyperplanes 1, 5, and 6 intersect in a codimension 2 subspace. sage: L.hyperplane_labels[1] Hyperplane 0*x0 + 0*x1 + x2 - x3 + 0 sage: L.hyperplane_labels[5] Hyperplane x0 + 0*x1 - x2 + 0*x3 + 0 sage: L.hyperplane_labels[6] Hyperplane x0 + 0*x1 + 0*x2 - x3 + 0 .atoms Output : the atoms of the underlying poset. .deletion Input : a hyperplane $H$. Output : the lattice of flats associated to the arrangement without $H$. Example (Deletion in the braid arrangement) We continue the $\\mathsf{A}_3$ example started above . We will delete the hyperplane labeled by $2$ and display the resulting lattice of flats. sage: L.deletion(2) The lattice of flats of: Arrangement of 5 hyperplanes of dimension 4 and rank 3 given by: Finite poset containing 13 elements .labels_of_flats Output : the list of tuples with first entry an element of the poset and second entry a subset of atoms. .labels_of_hyperplanes Output : the list of tuples with first entry an element of the poset and second entry a hyperplane. .Poincare_polynomial Output : the Poincar\u00e9 polynomial of the hyperplane arrangement. .proper_part_poset Output : the subposet without $\\hat{0}$ and $\\hat{1}$. .show No output given. This displays the underlying intersection poset using the default options in SageMath. This is a shortcut for L.poset.show() . .subarrangement Input : an integer $x$. Output : the lattice of flats of the interval $[\\hat{0}, x]$. Example (Subarrangement of the braid arrangement) We continue from the original $\\mathsf{A}_3$ example started above . We will construct the subarrangement from the flat labeled $10$. sage: L.subarrangement(10) The lattice of flats of: Arrangement <x1 - x2 | x0 - x1 | x0 - x2> given by: Finite poset containing 5 elements .restriction Input : an integer $x$. Output : the lattice of flats of the restriction to $x$ in the poset. Example (Subarrangement of the braid arrangement) We continue from the original $\\mathsf{A}_3$ example started above . We will construct the restriction from the flat labeled $3$. sage: L.restriction(3) The lattice of flats of: Arrangement <-x0 + x1 | x1 | x0> given by: Finite poset containing 5 elements","title":"Lattices"},{"location":"lattices/#lattices","text":"We include a class called LatticeOfFlats , which is associated with a hyperplane arrangement. This class keeps track of basic information we need to compute the various generating functions associated with a hyperplane arrangement. (For non-central arrangements, this is indeed not a lattice, but close to one.) All other functions are tied to the LatticeOfFlats class and, thus, are either attributes or methods.","title":"Lattices"},{"location":"lattices/#latticeofflats","text":"Input : a hyperplane arrangement; poset=None : a finite poset; flat_labels=None : a dictionary from the elements of the poset to subsets of atoms; hyperplane_labels=None : a dictionary from the atoms of the poset to the hyperplanes. Output : the lattice of flats for the given hyperplane arrangement. Unless the poset and labels have been computed before, they should not be given as this function computes the intersection poset of a hyperplane arrangement faster than the default in SageMath.","title":"LatticeOfFlats"},{"location":"lattices/#attributes","text":"The lattice of flats has four attributes: hyperplane_arrangement : the given hyperplane arrangement; poset : the intersection poset; flat_labels : the dictionary indexed by the elements of poset with values given by subsets of the atoms of poset ; hyperplane_labels : the dictionary indexed by the atoms of poset with values equal to the hyperplanes of hyperplane_arrangement .","title":"Attributes"},{"location":"lattices/#example-lattice-of-braid-arrangement","text":"We construct the lattice of flats for the braid arrangement in $\\mathbb{R}^4$. sage: A = hi.CoxeterArrangement(\"A3\") sage: A Arrangement of 6 hyperplanes of dimension 4 and rank 3 sage: L = hi.LatticeOfFlats(A) sage: L The lattice of flats of: Arrangement of 6 hyperplanes of dimension 4 and rank 3 given by: Finite poset containing 15 elements Now we look at the data stored in the attributes. We display the hyperplanes in the arrangement. sage: L.hyperplane_arrangement Arrangement of 6 hyperplanes of dimension 4 and rank 3 sage: L.hyperplane_arrangement.hyperplanes() (Hyperplane 0*x0 + 0*x1 + x2 - x3 + 0, Hyperplane 0*x0 + x1 - x2 + 0*x3 + 0, Hyperplane 0*x0 + x1 + 0*x2 - x3 + 0, Hyperplane x0 - x1 + 0*x2 + 0*x3 + 0, Hyperplane x0 + 0*x1 - x2 + 0*x3 + 0, Hyperplane x0 + 0*x1 + 0*x2 - x3 + 0) We display the poset as an image. sage: L.poset Finite poset containing 15 elements Instead of showing the entire dictionaries, we will evaluate them at a few points. sage: L.flat_labels[3] {3} sage: L.flat_labels[13] {3, 5} sage: L.flat_labels[9] {1, 5, 6} sage: L.flat_labels[0] {} We see that hyperplanes 1, 5, and 6 intersect in a codimension 2 subspace. sage: L.hyperplane_labels[1] Hyperplane 0*x0 + 0*x1 + x2 - x3 + 0 sage: L.hyperplane_labels[5] Hyperplane x0 + 0*x1 - x2 + 0*x3 + 0 sage: L.hyperplane_labels[6] Hyperplane x0 + 0*x1 + 0*x2 - x3 + 0","title":"Example (Lattice of braid arrangement)"},{"location":"lattices/#atoms","text":"Output : the atoms of the underlying poset.","title":".atoms"},{"location":"lattices/#deletion","text":"Input : a hyperplane $H$. Output : the lattice of flats associated to the arrangement without $H$.","title":".deletion"},{"location":"lattices/#example-deletion-in-the-braid-arrangement","text":"We continue the $\\mathsf{A}_3$ example started above . We will delete the hyperplane labeled by $2$ and display the resulting lattice of flats. sage: L.deletion(2) The lattice of flats of: Arrangement of 5 hyperplanes of dimension 4 and rank 3 given by: Finite poset containing 13 elements","title":"Example (Deletion in the braid arrangement)"},{"location":"lattices/#labels_of_flats","text":"Output : the list of tuples with first entry an element of the poset and second entry a subset of atoms.","title":".labels_of_flats"},{"location":"lattices/#labels_of_hyperplanes","text":"Output : the list of tuples with first entry an element of the poset and second entry a hyperplane.","title":".labels_of_hyperplanes"},{"location":"lattices/#poincare_polynomial","text":"Output : the Poincar\u00e9 polynomial of the hyperplane arrangement.","title":".Poincare_polynomial"},{"location":"lattices/#proper_part_poset","text":"Output : the subposet without $\\hat{0}$ and $\\hat{1}$.","title":".proper_part_poset"},{"location":"lattices/#show","text":"No output given. This displays the underlying intersection poset using the default options in SageMath. This is a shortcut for L.poset.show() .","title":".show"},{"location":"lattices/#subarrangement","text":"Input : an integer $x$. Output : the lattice of flats of the interval $[\\hat{0}, x]$.","title":".subarrangement"},{"location":"lattices/#example-subarrangement-of-the-braid-arrangement","text":"We continue from the original $\\mathsf{A}_3$ example started above . We will construct the subarrangement from the flat labeled $10$. sage: L.subarrangement(10) The lattice of flats of: Arrangement <x1 - x2 | x0 - x1 | x0 - x2> given by: Finite poset containing 5 elements","title":"Example (Subarrangement of the braid arrangement)"},{"location":"lattices/#restriction","text":"Input : an integer $x$. Output : the lattice of flats of the restriction to $x$ in the poset.","title":".restriction"},{"location":"lattices/#example-subarrangement-of-the-braid-arrangement_1","text":"We continue from the original $\\mathsf{A}_3$ example started above . We will construct the restriction from the flat labeled $3$. sage: L.restriction(3) The lattice of flats of: Arrangement <-x0 + x1 | x1 | x0> given by: Finite poset containing 5 elements","title":"Example (Subarrangement of the braid arrangement)"}]}